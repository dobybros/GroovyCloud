// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Mobile.proto

package com.pbdata.generated.mobile;

public final class MobilePB {
  private MobilePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface IdentityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Identity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
     * </pre>
     *
     * <code>optional string sessionId = 2;</code>
     */
    String getSessionId();
    /**
     * <pre>
     *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
     * </pre>
     *
     * <code>optional string sessionId = 2;</code>
     */
    com.google.protobuf.ByteString
        getSessionIdBytes();

    /**
     * <pre>
     *业务上的用户ID， 和业务服务器通信时会带上的。 
     * </pre>
     *
     * <code>optional string userId = 3;</code>
     */
    String getUserId();
    /**
     * <pre>
     *业务上的用户ID， 和业务服务器通信时会带上的。 
     * </pre>
     *
     * <code>optional string userId = 3;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    String getService();
    /**
     * <pre>
     *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     *API key， 用于我们做权限控制
     * </pre>
     *
     * <code>optional string key = 5;</code>
     */
    String getKey();
    /**
     * <pre>
     *API key， 用于我们做权限控制
     * </pre>
     *
     * <code>optional string key = 5;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 6;</code>
     */
    String getAppId();
    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 6;</code>
     */
    com.google.protobuf.ByteString
        getAppIdBytes();

    /**
     * <pre>
     *通过登陆服务器分配得到的登陆代码。 
     * </pre>
     *
     * <code>optional string code = 7;</code>
     */
    String getCode();
    /**
     * <pre>
     *通过登陆服务器分配得到的登陆代码。 
     * </pre>
     *
     * <code>optional string code = 7;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <code>optional int32 terminal = 8;</code>
     */
    int getTerminal();

    /**
     * <code>optional string deviceToken = 9;</code>
     */
    String getDeviceToken();
    /**
     * <code>optional string deviceToken = 9;</code>
     */
    com.google.protobuf.ByteString
        getDeviceTokenBytes();

    /**
     * <code>optional int32 sdkVersion = 10;</code>
     */
    int getSdkVersion();
  }
  /**
   * <pre>
   *从客户端到服务器端的数据
   * </pre>
   *
   * Protobuf type {@code Identity}
   */
  public  static final class Identity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Identity)
      IdentityOrBuilder {
    // Use Identity.newBuilder() to construct.
    private Identity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Identity() {
      id_ = "";
      sessionId_ = "";
      userId_ = "";
      service_ = "";
      key_ = "";
      appId_ = "";
      code_ = "";
      terminal_ = 0;
      deviceToken_ = "";
      sdkVersion_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Identity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              sessionId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              appId_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              code_ = s;
              break;
            }
            case 64: {

              terminal_ = input.readInt32();
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              deviceToken_ = s;
              break;
            }
            case 80: {

              sdkVersion_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_Identity_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_Identity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Identity.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SESSIONID_FIELD_NUMBER = 2;
    private volatile Object sessionId_;
    /**
     * <pre>
     *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
     * </pre>
     *
     * <code>optional string sessionId = 2;</code>
     */
    public String getSessionId() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sessionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
     * </pre>
     *
     * <code>optional string sessionId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERID_FIELD_NUMBER = 3;
    private volatile Object userId_;
    /**
     * <pre>
     *业务上的用户ID， 和业务服务器通信时会带上的。 
     * </pre>
     *
     * <code>optional string userId = 3;</code>
     */
    public String getUserId() {
      Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务上的用户ID， 和业务服务器通信时会带上的。 
     * </pre>
     *
     * <code>optional string userId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICE_FIELD_NUMBER = 4;
    private volatile Object service_;
    /**
     * <pre>
     *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    public String getService() {
      Object ref = service_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 5;
    private volatile Object key_;
    /**
     * <pre>
     *API key， 用于我们做权限控制
     * </pre>
     *
     * <code>optional string key = 5;</code>
     */
    public String getKey() {
      Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *API key， 用于我们做权限控制
     * </pre>
     *
     * <code>optional string key = 5;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APPID_FIELD_NUMBER = 6;
    private volatile Object appId_;
    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 6;</code>
     */
    public String getAppId() {
      Object ref = appId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAppIdBytes() {
      Object ref = appId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 7;
    private volatile Object code_;
    /**
     * <pre>
     *通过登陆服务器分配得到的登陆代码。 
     * </pre>
     *
     * <code>optional string code = 7;</code>
     */
    public String getCode() {
      Object ref = code_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *通过登陆服务器分配得到的登陆代码。 
     * </pre>
     *
     * <code>optional string code = 7;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      Object ref = code_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TERMINAL_FIELD_NUMBER = 8;
    private int terminal_;
    /**
     * <code>optional int32 terminal = 8;</code>
     */
    public int getTerminal() {
      return terminal_;
    }

    public static final int DEVICETOKEN_FIELD_NUMBER = 9;
    private volatile Object deviceToken_;
    /**
     * <code>optional string deviceToken = 9;</code>
     */
    public String getDeviceToken() {
      Object ref = deviceToken_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceToken_ = s;
        return s;
      }
    }
    /**
     * <code>optional string deviceToken = 9;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceTokenBytes() {
      Object ref = deviceToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SDKVERSION_FIELD_NUMBER = 10;
    private int sdkVersion_;
    /**
     * <code>optional int32 sdkVersion = 10;</code>
     */
    public int getSdkVersion() {
      return sdkVersion_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getSessionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sessionId_);
      }
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, userId_);
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, service_);
      }
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, key_);
      }
      if (!getAppIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, appId_);
      }
      if (!getCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, code_);
      }
      if (terminal_ != 0) {
        output.writeInt32(8, terminal_);
      }
      if (!getDeviceTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, deviceToken_);
      }
      if (sdkVersion_ != 0) {
        output.writeInt32(10, sdkVersion_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getSessionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sessionId_);
      }
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, userId_);
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, service_);
      }
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, key_);
      }
      if (!getAppIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, appId_);
      }
      if (!getCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, code_);
      }
      if (terminal_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, terminal_);
      }
      if (!getDeviceTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, deviceToken_);
      }
      if (sdkVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sdkVersion_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Identity)) {
        return super.equals(obj);
      }
      Identity other = (Identity) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getSessionId()
          .equals(other.getSessionId());
      result = result && getUserId()
          .equals(other.getUserId());
      result = result && getService()
          .equals(other.getService());
      result = result && getKey()
          .equals(other.getKey());
      result = result && getAppId()
          .equals(other.getAppId());
      result = result && getCode()
          .equals(other.getCode());
      result = result && (getTerminal()
          == other.getTerminal());
      result = result && getDeviceToken()
          .equals(other.getDeviceToken());
      result = result && (getSdkVersion()
          == other.getSdkVersion());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + SESSIONID_FIELD_NUMBER;
      hash = (53 * hash) + getSessionId().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + APPID_FIELD_NUMBER;
      hash = (53 * hash) + getAppId().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + TERMINAL_FIELD_NUMBER;
      hash = (53 * hash) + getTerminal();
      hash = (37 * hash) + DEVICETOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceToken().hashCode();
      hash = (37 * hash) + SDKVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getSdkVersion();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Identity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Identity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Identity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Identity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Identity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Identity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Identity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Identity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Identity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Identity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Identity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *从客户端到服务器端的数据
     * </pre>
     *
     * Protobuf type {@code Identity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Identity)
        IdentityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_Identity_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_Identity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Identity.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.Identity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        sessionId_ = "";

        userId_ = "";

        service_ = "";

        key_ = "";

        appId_ = "";

        code_ = "";

        terminal_ = 0;

        deviceToken_ = "";

        sdkVersion_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_Identity_descriptor;
      }

      public Identity getDefaultInstanceForType() {
        return Identity.getDefaultInstance();
      }

      public Identity build() {
        Identity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Identity buildPartial() {
        Identity result = new Identity(this);
        result.id_ = id_;
        result.sessionId_ = sessionId_;
        result.userId_ = userId_;
        result.service_ = service_;
        result.key_ = key_;
        result.appId_ = appId_;
        result.code_ = code_;
        result.terminal_ = terminal_;
        result.deviceToken_ = deviceToken_;
        result.sdkVersion_ = sdkVersion_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Identity) {
          return mergeFrom((Identity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Identity other) {
        if (other == Identity.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getSessionId().isEmpty()) {
          sessionId_ = other.sessionId_;
          onChanged();
        }
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getAppId().isEmpty()) {
          appId_ = other.appId_;
          onChanged();
        }
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          onChanged();
        }
        if (other.getTerminal() != 0) {
          setTerminal(other.getTerminal());
        }
        if (!other.getDeviceToken().isEmpty()) {
          deviceToken_ = other.deviceToken_;
          onChanged();
        }
        if (other.getSdkVersion() != 0) {
          setSdkVersion(other.getSdkVersion());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Identity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Identity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private Object sessionId_ = "";
      /**
       * <pre>
       *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
       * </pre>
       *
       * <code>optional string sessionId = 2;</code>
       */
      public String getSessionId() {
        Object ref = sessionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sessionId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
       * </pre>
       *
       * <code>optional string sessionId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSessionIdBytes() {
        Object ref = sessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
       * </pre>
       *
       * <code>optional string sessionId = 2;</code>
       */
      public Builder setSessionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
       * </pre>
       *
       * <code>optional string sessionId = 2;</code>
       */
      public Builder clearSessionId() {
        
        sessionId_ = getDefaultInstance().getSessionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务上的用户会话ID， 和业务服务器通信时会带上的。 在纯推送业务环境中， 此值为空。 
       * </pre>
       *
       * <code>optional string sessionId = 2;</code>
       */
      public Builder setSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sessionId_ = value;
        onChanged();
        return this;
      }

      private Object userId_ = "";
      /**
       * <pre>
       *业务上的用户ID， 和业务服务器通信时会带上的。 
       * </pre>
       *
       * <code>optional string userId = 3;</code>
       */
      public String getUserId() {
        Object ref = userId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务上的用户ID， 和业务服务器通信时会带上的。 
       * </pre>
       *
       * <code>optional string userId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务上的用户ID， 和业务服务器通信时会带上的。 
       * </pre>
       *
       * <code>optional string userId = 3;</code>
       */
      public Builder setUserId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务上的用户ID， 和业务服务器通信时会带上的。 
       * </pre>
       *
       * <code>optional string userId = 3;</code>
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务上的用户ID， 和业务服务器通信时会带上的。 
       * </pre>
       *
       * <code>optional string userId = 3;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private Object service_ = "";
      /**
       * <pre>
       *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public String getService() {
        Object ref = service_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public Builder setService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *如果一个通道需要支持的多种业务， OnlineUserManager 1-* &gt; OnlineUser 1-* &gt; OnlineServiceUser。 为每个Service都需要发送Identity数据注册
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private Object key_ = "";
      /**
       * <pre>
       *API key， 用于我们做权限控制
       * </pre>
       *
       * <code>optional string key = 5;</code>
       */
      public String getKey() {
        Object ref = key_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *API key， 用于我们做权限控制
       * </pre>
       *
       * <code>optional string key = 5;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *API key， 用于我们做权限控制
       * </pre>
       *
       * <code>optional string key = 5;</code>
       */
      public Builder setKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *API key， 用于我们做权限控制
       * </pre>
       *
       * <code>optional string key = 5;</code>
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *API key， 用于我们做权限控制
       * </pre>
       *
       * <code>optional string key = 5;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private Object appId_ = "";
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 6;</code>
       */
      public String getAppId() {
        Object ref = appId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAppIdBytes() {
        Object ref = appId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 6;</code>
       */
      public Builder setAppId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 6;</code>
       */
      public Builder clearAppId() {
        
        appId_ = getDefaultInstance().getAppId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 6;</code>
       */
      public Builder setAppIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appId_ = value;
        onChanged();
        return this;
      }

      private Object code_ = "";
      /**
       * <pre>
       *通过登陆服务器分配得到的登陆代码。 
       * </pre>
       *
       * <code>optional string code = 7;</code>
       */
      public String getCode() {
        Object ref = code_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *通过登陆服务器分配得到的登陆代码。 
       * </pre>
       *
       * <code>optional string code = 7;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *通过登陆服务器分配得到的登陆代码。 
       * </pre>
       *
       * <code>optional string code = 7;</code>
       */
      public Builder setCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通过登陆服务器分配得到的登陆代码。 
       * </pre>
       *
       * <code>optional string code = 7;</code>
       */
      public Builder clearCode() {
        
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通过登陆服务器分配得到的登陆代码。 
       * </pre>
       *
       * <code>optional string code = 7;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        code_ = value;
        onChanged();
        return this;
      }

      private int terminal_ ;
      /**
       * <code>optional int32 terminal = 8;</code>
       */
      public int getTerminal() {
        return terminal_;
      }
      /**
       * <code>optional int32 terminal = 8;</code>
       */
      public Builder setTerminal(int value) {
        
        terminal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 terminal = 8;</code>
       */
      public Builder clearTerminal() {
        
        terminal_ = 0;
        onChanged();
        return this;
      }

      private Object deviceToken_ = "";
      /**
       * <code>optional string deviceToken = 9;</code>
       */
      public String getDeviceToken() {
        Object ref = deviceToken_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceToken_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string deviceToken = 9;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceTokenBytes() {
        Object ref = deviceToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string deviceToken = 9;</code>
       */
      public Builder setDeviceToken(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string deviceToken = 9;</code>
       */
      public Builder clearDeviceToken() {
        
        deviceToken_ = getDefaultInstance().getDeviceToken();
        onChanged();
        return this;
      }
      /**
       * <code>optional string deviceToken = 9;</code>
       */
      public Builder setDeviceTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceToken_ = value;
        onChanged();
        return this;
      }

      private int sdkVersion_ ;
      /**
       * <code>optional int32 sdkVersion = 10;</code>
       */
      public int getSdkVersion() {
        return sdkVersion_;
      }
      /**
       * <code>optional int32 sdkVersion = 10;</code>
       */
      public Builder setSdkVersion(int value) {
        
        sdkVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sdkVersion = 10;</code>
       */
      public Builder clearSdkVersion() {
        
        sdkVersion_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Identity)
    }

    // @@protoc_insertion_point(class_scope:Identity)
    private static final Identity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Identity();
    }

    public static Identity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Identity>
        PARSER = new com.google.protobuf.AbstractParser<Identity>() {
      public Identity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Identity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Identity> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Identity> getParserForType() {
      return PARSER;
    }

    public Identity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IncomingMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IncomingMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * singlechat/&#42;, singlechat/server1
     * </pre>
     *
     * <code>optional string server = 2;</code>
     */
    String getServer();
    /**
     * <pre>
     * singlechat/&#42;, singlechat/server1
     * </pre>
     *
     * <code>optional string server = 2;</code>
     */
    com.google.protobuf.ByteString
        getServerBytes();

    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    java.util.List<String>
        getUserIdsList();
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    int getUserIdsCount();
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    String getUserIds(int index);
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    com.google.protobuf.ByteString
        getUserIdsBytes(int index);

    /**
     * <pre>
     *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    String getService();
    /**
     * <pre>
     *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    String getContentType();
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();

    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 6;</code>
     */
    int getContentEncode();

    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 7;</code>
     */
    com.google.protobuf.ByteString getContent();

    /**
     * <pre>
     *消息要发送到用户的所属service
     * </pre>
     *
     * <code>optional string userService = 8;</code>
     */
    String getUserService();
    /**
     * <pre>
     *消息要发送到用户的所属service
     * </pre>
     *
     * <code>optional string userService = 8;</code>
     */
    com.google.protobuf.ByteString
        getUserServiceBytes();

    /**
     * <pre>
     *是否需要存储离线消息
     * </pre>
     *
     * <code>optional bool notSaveOfflineMsg = 9;</code>
     */
    boolean getNotSaveOfflineMsg();
  }
  /**
   * Protobuf type {@code IncomingMessage}
   */
  public  static final class IncomingMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IncomingMessage)
      IncomingMessageOrBuilder {
    // Use IncomingMessage.newBuilder() to construct.
    private IncomingMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IncomingMessage() {
      id_ = "";
      server_ = "";
      userIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      service_ = "";
      contentType_ = "";
      contentEncode_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
      userService_ = "";
      notSaveOfflineMsg_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private IncomingMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              server_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                userIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              userIds_.add(s);
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              contentType_ = s;
              break;
            }
            case 48: {

              contentEncode_ = input.readInt32();
              break;
            }
            case 58: {

              content_ = input.readBytes();
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              userService_ = s;
              break;
            }
            case 72: {

              notSaveOfflineMsg_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          userIds_ = userIds_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_IncomingMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_IncomingMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IncomingMessage.class, Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVER_FIELD_NUMBER = 2;
    private volatile Object server_;
    /**
     * <pre>
     * singlechat/&#42;, singlechat/server1
     * </pre>
     *
     * <code>optional string server = 2;</code>
     */
    public String getServer() {
      Object ref = server_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        server_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * singlechat/&#42;, singlechat/server1
     * </pre>
     *
     * <code>optional string server = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServerBytes() {
      Object ref = server_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        server_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList userIds_;
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getUserIdsList() {
      return userIds_;
    }
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    public int getUserIdsCount() {
      return userIds_.size();
    }
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    public String getUserIds(int index) {
      return userIds_.get(index);
    }
    /**
     * <pre>
     *消息要发送给的用户ID
     * </pre>
     *
     * <code>repeated string userIds = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdsBytes(int index) {
      return userIds_.getByteString(index);
    }

    public static final int SERVICE_FIELD_NUMBER = 4;
    private volatile Object service_;
    /**
     * <pre>
     *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    public String getService() {
      Object ref = service_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
     * </pre>
     *
     * <code>optional string service = 4;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTTYPE_FIELD_NUMBER = 5;
    private volatile Object contentType_;
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    public String getContentType() {
      Object ref = contentType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        contentType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      Object ref = contentType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTENCODE_FIELD_NUMBER = 6;
    private int contentEncode_;
    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 6;</code>
     */
    public int getContentEncode() {
      return contentEncode_;
    }

    public static final int CONTENT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 7;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    public static final int USERSERVICE_FIELD_NUMBER = 8;
    private volatile Object userService_;
    /**
     * <pre>
     *消息要发送到用户的所属service
     * </pre>
     *
     * <code>optional string userService = 8;</code>
     */
    public String getUserService() {
      Object ref = userService_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        userService_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *消息要发送到用户的所属service
     * </pre>
     *
     * <code>optional string userService = 8;</code>
     */
    public com.google.protobuf.ByteString
        getUserServiceBytes() {
      Object ref = userService_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userService_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NOTSAVEOFFLINEMSG_FIELD_NUMBER = 9;
    private boolean notSaveOfflineMsg_;
    /**
     * <pre>
     *是否需要存储离线消息
     * </pre>
     *
     * <code>optional bool notSaveOfflineMsg = 9;</code>
     */
    public boolean getNotSaveOfflineMsg() {
      return notSaveOfflineMsg_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getServerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, server_);
      }
      for (int i = 0; i < userIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, userIds_.getRaw(i));
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, service_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, contentType_);
      }
      if (contentEncode_ != 0) {
        output.writeInt32(6, contentEncode_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(7, content_);
      }
      if (!getUserServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, userService_);
      }
      if (notSaveOfflineMsg_ != false) {
        output.writeBool(9, notSaveOfflineMsg_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getServerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, server_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < userIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(userIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getUserIdsList().size();
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, service_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, contentType_);
      }
      if (contentEncode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, contentEncode_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, content_);
      }
      if (!getUserServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, userService_);
      }
      if (notSaveOfflineMsg_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, notSaveOfflineMsg_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof IncomingMessage)) {
        return super.equals(obj);
      }
      IncomingMessage other = (IncomingMessage) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getServer()
          .equals(other.getServer());
      result = result && getUserIdsList()
          .equals(other.getUserIdsList());
      result = result && getService()
          .equals(other.getService());
      result = result && getContentType()
          .equals(other.getContentType());
      result = result && (getContentEncode()
          == other.getContentEncode());
      result = result && getContent()
          .equals(other.getContent());
      result = result && getUserService()
          .equals(other.getUserService());
      result = result && (getNotSaveOfflineMsg()
          == other.getNotSaveOfflineMsg());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + SERVER_FIELD_NUMBER;
      hash = (53 * hash) + getServer().hashCode();
      if (getUserIdsCount() > 0) {
        hash = (37 * hash) + USERIDS_FIELD_NUMBER;
        hash = (53 * hash) + getUserIdsList().hashCode();
      }
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + CONTENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType().hashCode();
      hash = (37 * hash) + CONTENTENCODE_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + USERSERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getUserService().hashCode();
      hash = (37 * hash) + NOTSAVEOFFLINEMSG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNotSaveOfflineMsg());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static IncomingMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IncomingMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IncomingMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IncomingMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IncomingMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IncomingMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static IncomingMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static IncomingMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static IncomingMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IncomingMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(IncomingMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code IncomingMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IncomingMessage)
        IncomingMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_IncomingMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_IncomingMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IncomingMessage.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.IncomingMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        server_ = "";

        userIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        service_ = "";

        contentType_ = "";

        contentEncode_ = 0;

        content_ = com.google.protobuf.ByteString.EMPTY;

        userService_ = "";

        notSaveOfflineMsg_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_IncomingMessage_descriptor;
      }

      public IncomingMessage getDefaultInstanceForType() {
        return IncomingMessage.getDefaultInstance();
      }

      public IncomingMessage build() {
        IncomingMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IncomingMessage buildPartial() {
        IncomingMessage result = new IncomingMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.server_ = server_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          userIds_ = userIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.userIds_ = userIds_;
        result.service_ = service_;
        result.contentType_ = contentType_;
        result.contentEncode_ = contentEncode_;
        result.content_ = content_;
        result.userService_ = userService_;
        result.notSaveOfflineMsg_ = notSaveOfflineMsg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IncomingMessage) {
          return mergeFrom((IncomingMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IncomingMessage other) {
        if (other == IncomingMessage.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getServer().isEmpty()) {
          server_ = other.server_;
          onChanged();
        }
        if (!other.userIds_.isEmpty()) {
          if (userIds_.isEmpty()) {
            userIds_ = other.userIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUserIdsIsMutable();
            userIds_.addAll(other.userIds_);
          }
          onChanged();
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (!other.getContentType().isEmpty()) {
          contentType_ = other.contentType_;
          onChanged();
        }
        if (other.getContentEncode() != 0) {
          setContentEncode(other.getContentEncode());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        if (!other.getUserService().isEmpty()) {
          userService_ = other.userService_;
          onChanged();
        }
        if (other.getNotSaveOfflineMsg() != false) {
          setNotSaveOfflineMsg(other.getNotSaveOfflineMsg());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IncomingMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IncomingMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private Object server_ = "";
      /**
       * <pre>
       * singlechat/&#42;, singlechat/server1
       * </pre>
       *
       * <code>optional string server = 2;</code>
       */
      public String getServer() {
        Object ref = server_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          server_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * singlechat/&#42;, singlechat/server1
       * </pre>
       *
       * <code>optional string server = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServerBytes() {
        Object ref = server_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          server_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * singlechat/&#42;, singlechat/server1
       * </pre>
       *
       * <code>optional string server = 2;</code>
       */
      public Builder setServer(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        server_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * singlechat/&#42;, singlechat/server1
       * </pre>
       *
       * <code>optional string server = 2;</code>
       */
      public Builder clearServer() {
        
        server_ = getDefaultInstance().getServer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * singlechat/&#42;, singlechat/server1
       * </pre>
       *
       * <code>optional string server = 2;</code>
       */
      public Builder setServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        server_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList userIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          userIds_ = new com.google.protobuf.LazyStringArrayList(userIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getUserIdsList() {
        return userIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public int getUserIdsCount() {
        return userIds_.size();
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public String getUserIds(int index) {
        return userIds_.get(index);
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdsBytes(int index) {
        return userIds_.getByteString(index);
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public Builder setUserIds(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdsIsMutable();
        userIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public Builder addUserIds(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdsIsMutable();
        userIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public Builder addAllUserIds(
          Iterable<String> values) {
        ensureUserIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, userIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public Builder clearUserIds() {
        userIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息要发送给的用户ID
       * </pre>
       *
       * <code>repeated string userIds = 3;</code>
       */
      public Builder addUserIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureUserIdsIsMutable();
        userIds_.add(value);
        onChanged();
        return this;
      }

      private Object service_ = "";
      /**
       * <pre>
       *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public String getService() {
        Object ref = service_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public Builder setService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当该通道支持多种services的时候， 需要指定这条消息是属于哪个service的。 如果该通道只支持一个service， 则可以为空
       * </pre>
       *
       * <code>optional string service = 4;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private Object contentType_ = "";
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public String getContentType() {
        Object ref = contentType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public Builder setContentType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public Builder clearContentType() {
        
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        contentType_ = value;
        onChanged();
        return this;
      }

      private int contentEncode_ ;
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public int getContentEncode() {
        return contentEncode_;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public Builder setContentEncode(int value) {
        
        contentEncode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public Builder clearContentEncode() {
        
        contentEncode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      private Object userService_ = "";
      /**
       * <pre>
       *消息要发送到用户的所属service
       * </pre>
       *
       * <code>optional string userService = 8;</code>
       */
      public String getUserService() {
        Object ref = userService_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          userService_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *消息要发送到用户的所属service
       * </pre>
       *
       * <code>optional string userService = 8;</code>
       */
      public com.google.protobuf.ByteString
          getUserServiceBytes() {
        Object ref = userService_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userService_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *消息要发送到用户的所属service
       * </pre>
       *
       * <code>optional string userService = 8;</code>
       */
      public Builder setUserService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userService_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息要发送到用户的所属service
       * </pre>
       *
       * <code>optional string userService = 8;</code>
       */
      public Builder clearUserService() {
        
        userService_ = getDefaultInstance().getUserService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息要发送到用户的所属service
       * </pre>
       *
       * <code>optional string userService = 8;</code>
       */
      public Builder setUserServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userService_ = value;
        onChanged();
        return this;
      }

      private boolean notSaveOfflineMsg_ ;
      /**
       * <pre>
       *是否需要存储离线消息
       * </pre>
       *
       * <code>optional bool notSaveOfflineMsg = 9;</code>
       */
      public boolean getNotSaveOfflineMsg() {
        return notSaveOfflineMsg_;
      }
      /**
       * <pre>
       *是否需要存储离线消息
       * </pre>
       *
       * <code>optional bool notSaveOfflineMsg = 9;</code>
       */
      public Builder setNotSaveOfflineMsg(boolean value) {
        
        notSaveOfflineMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否需要存储离线消息
       * </pre>
       *
       * <code>optional bool notSaveOfflineMsg = 9;</code>
       */
      public Builder clearNotSaveOfflineMsg() {
        
        notSaveOfflineMsg_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:IncomingMessage)
    }

    // @@protoc_insertion_point(class_scope:IncomingMessage)
    private static final IncomingMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IncomingMessage();
    }

    public static IncomingMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IncomingMessage>
        PARSER = new com.google.protobuf.AbstractParser<IncomingMessage>() {
      public IncomingMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new IncomingMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IncomingMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IncomingMessage> getParserForType() {
      return PARSER;
    }

    public IncomingMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcknowledgeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Acknowledge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    java.util.List<String>
        getMsgIdsList();
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    int getMsgIdsCount();
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    String getMsgIds(int index);
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    com.google.protobuf.ByteString
        getMsgIdsBytes(int index);

    /**
     * <pre>
     *来自于那个服务
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    String getService();
    /**
     * <pre>
     *来自于那个服务
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();
  }
  /**
   * Protobuf type {@code Acknowledge}
   */
  public  static final class Acknowledge extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Acknowledge)
      AcknowledgeOrBuilder {
    // Use Acknowledge.newBuilder() to construct.
    private Acknowledge(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Acknowledge() {
      id_ = "";
      msgIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      service_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Acknowledge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                msgIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              msgIds_.add(s);
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          msgIds_ = msgIds_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_Acknowledge_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_Acknowledge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Acknowledge.class, Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSGIDS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList msgIds_;
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getMsgIdsList() {
      return msgIds_;
    }
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    public int getMsgIdsCount() {
      return msgIds_.size();
    }
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    public String getMsgIds(int index) {
      return msgIds_.get(index);
    }
    /**
     * <pre>
     *已收到的消息ID
     * </pre>
     *
     * <code>repeated string msgIds = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMsgIdsBytes(int index) {
      return msgIds_.getByteString(index);
    }

    public static final int SERVICE_FIELD_NUMBER = 3;
    private volatile Object service_;
    /**
     * <pre>
     *来自于那个服务
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    public String getService() {
      Object ref = service_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *来自于那个服务
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      for (int i = 0; i < msgIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, msgIds_.getRaw(i));
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, service_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < msgIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(msgIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getMsgIdsList().size();
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, service_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Acknowledge)) {
        return super.equals(obj);
      }
      Acknowledge other = (Acknowledge) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getMsgIdsList()
          .equals(other.getMsgIdsList());
      result = result && getService()
          .equals(other.getService());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getMsgIdsCount() > 0) {
        hash = (37 * hash) + MSGIDS_FIELD_NUMBER;
        hash = (53 * hash) + getMsgIdsList().hashCode();
      }
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Acknowledge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Acknowledge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Acknowledge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Acknowledge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Acknowledge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Acknowledge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Acknowledge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Acknowledge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Acknowledge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Acknowledge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Acknowledge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Acknowledge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Acknowledge)
        AcknowledgeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_Acknowledge_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_Acknowledge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Acknowledge.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.Acknowledge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        msgIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        service_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_Acknowledge_descriptor;
      }

      public Acknowledge getDefaultInstanceForType() {
        return Acknowledge.getDefaultInstance();
      }

      public Acknowledge build() {
        Acknowledge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Acknowledge buildPartial() {
        Acknowledge result = new Acknowledge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          msgIds_ = msgIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.msgIds_ = msgIds_;
        result.service_ = service_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Acknowledge) {
          return mergeFrom((Acknowledge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Acknowledge other) {
        if (other == Acknowledge.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.msgIds_.isEmpty()) {
          if (msgIds_.isEmpty()) {
            msgIds_ = other.msgIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMsgIdsIsMutable();
            msgIds_.addAll(other.msgIds_);
          }
          onChanged();
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Acknowledge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Acknowledge) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object id_ = "";
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList msgIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMsgIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          msgIds_ = new com.google.protobuf.LazyStringArrayList(msgIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getMsgIdsList() {
        return msgIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public int getMsgIdsCount() {
        return msgIds_.size();
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public String getMsgIds(int index) {
        return msgIds_.get(index);
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMsgIdsBytes(int index) {
        return msgIds_.getByteString(index);
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public Builder setMsgIds(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMsgIdsIsMutable();
        msgIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public Builder addMsgIds(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMsgIdsIsMutable();
        msgIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public Builder addAllMsgIds(
          Iterable<String> values) {
        ensureMsgIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, msgIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public Builder clearMsgIds() {
        msgIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已收到的消息ID
       * </pre>
       *
       * <code>repeated string msgIds = 2;</code>
       */
      public Builder addMsgIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureMsgIdsIsMutable();
        msgIds_.add(value);
        onChanged();
        return this;
      }

      private Object service_ = "";
      /**
       * <pre>
       *来自于那个服务
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public String getService() {
        Object ref = service_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *来自于那个服务
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *来自于那个服务
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder setService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来自于那个服务
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来自于那个服务
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Acknowledge)
    }

    // @@protoc_insertion_point(class_scope:Acknowledge)
    private static final Acknowledge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acknowledge();
    }

    public static Acknowledge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Acknowledge>
        PARSER = new com.google.protobuf.AbstractParser<Acknowledge>() {
      public Acknowledge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Acknowledge(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Acknowledge> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Acknowledge> getParserForType() {
      return PARSER;
    }

    public Acknowledge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Ping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();
  }
  /**
   * Protobuf type {@code Ping}
   */
  public  static final class Ping extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Ping)
      PingOrBuilder {
    // Use Ping.newBuilder() to construct.
    private Ping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ping() {
      id_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Ping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_Ping_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_Ping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Ping.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *此处可以不用
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Ping)) {
        return super.equals(obj);
      }
      Ping other = (Ping) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Ping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Ping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Ping)
        PingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_Ping_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_Ping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Ping.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.Ping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_Ping_descriptor;
      }

      public Ping getDefaultInstanceForType() {
        return Ping.getDefaultInstance();
      }

      public Ping build() {
        Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Ping buildPartial() {
        Ping result = new Ping(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Ping) {
          return mergeFrom((Ping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Ping other) {
        if (other == Ping.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Ping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Ping) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object id_ = "";
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *此处可以不用
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Ping)
    }

    // @@protoc_insertion_point(class_scope:Ping)
    private static final Ping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Ping();
    }

    public static Ping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ping>
        PARSER = new com.google.protobuf.AbstractParser<Ping>() {
      public Ping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ping(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ping> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Ping> getParserForType() {
      return PARSER;
    }

    public Ping getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Result)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 code = 1;</code>
     */
    int getCode();

    /**
     * <code>optional string description = 2;</code>
     */
    String getDescription();
    /**
     * <code>optional string description = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     *对应Message里的id， 为客户端id
     * </pre>
     *
     * <code>optional string forId = 3;</code>
     */
    String getForId();
    /**
     * <pre>
     *对应Message里的id， 为客户端id
     * </pre>
     *
     * <code>optional string forId = 3;</code>
     */
    com.google.protobuf.ByteString
        getForIdBytes();

    /**
     * <pre>
     *返回结果的服务器时间
     * </pre>
     *
     * <code>optional int64 time = 4;</code>
     */
    long getTime();

    /**
     * <pre>
     *处理这件事所对应的服务器ID， 可能没有。
     * </pre>
     *
     * <code>optional string serverId = 5;</code>
     */
    String getServerId();
    /**
     * <pre>
     *处理这件事所对应的服务器ID， 可能没有。
     * </pre>
     *
     * <code>optional string serverId = 5;</code>
     */
    com.google.protobuf.ByteString
        getServerIdBytes();

    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 6;</code>
     */
    int getContentEncode();

    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 7;</code>
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code Result}
   */
  public  static final class Result extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Result)
      ResultOrBuilder {
    // Use Result.newBuilder() to construct.
    private Result(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Result() {
      code_ = 0;
      description_ = "";
      forId_ = "";
      time_ = 0L;
      serverId_ = "";
      contentEncode_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              code_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              forId_ = s;
              break;
            }
            case 32: {

              time_ = input.readInt64();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              serverId_ = s;
              break;
            }
            case 48: {

              contentEncode_ = input.readInt32();
              break;
            }
            case 58: {

              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_Result_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Result.class, Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>optional int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile Object description_;
    /**
     * <code>optional string description = 2;</code>
     */
    public String getDescription() {
      Object ref = description_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>optional string description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FORID_FIELD_NUMBER = 3;
    private volatile Object forId_;
    /**
     * <pre>
     *对应Message里的id， 为客户端id
     * </pre>
     *
     * <code>optional string forId = 3;</code>
     */
    public String getForId() {
      Object ref = forId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        forId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *对应Message里的id， 为客户端id
     * </pre>
     *
     * <code>optional string forId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getForIdBytes() {
      Object ref = forId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        forId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 4;
    private long time_;
    /**
     * <pre>
     *返回结果的服务器时间
     * </pre>
     *
     * <code>optional int64 time = 4;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int SERVERID_FIELD_NUMBER = 5;
    private volatile Object serverId_;
    /**
     * <pre>
     *处理这件事所对应的服务器ID， 可能没有。
     * </pre>
     *
     * <code>optional string serverId = 5;</code>
     */
    public String getServerId() {
      Object ref = serverId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *处理这件事所对应的服务器ID， 可能没有。
     * </pre>
     *
     * <code>optional string serverId = 5;</code>
     */
    public com.google.protobuf.ByteString
        getServerIdBytes() {
      Object ref = serverId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTENCODE_FIELD_NUMBER = 6;
    private int contentEncode_;
    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 6;</code>
     */
    public int getContentEncode() {
      return contentEncode_;
    }

    public static final int CONTENT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 7;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != 0) {
        output.writeInt32(1, code_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (!getForIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, forId_);
      }
      if (time_ != 0L) {
        output.writeInt64(4, time_);
      }
      if (!getServerIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serverId_);
      }
      if (contentEncode_ != 0) {
        output.writeInt32(6, contentEncode_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(7, content_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      if (!getForIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, forId_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, time_);
      }
      if (!getServerIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serverId_);
      }
      if (contentEncode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, contentEncode_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, content_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Result)) {
        return super.equals(obj);
      }
      Result other = (Result) obj;

      boolean result = true;
      result = result && (getCode()
          == other.getCode());
      result = result && getDescription()
          .equals(other.getDescription());
      result = result && getForId()
          .equals(other.getForId());
      result = result && (getTime()
          == other.getTime());
      result = result && getServerId()
          .equals(other.getServerId());
      result = result && (getContentEncode()
          == other.getContentEncode());
      result = result && getContent()
          .equals(other.getContent());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + FORID_FIELD_NUMBER;
      hash = (53 * hash) + getForId().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + SERVERID_FIELD_NUMBER;
      hash = (53 * hash) + getServerId().hashCode();
      hash = (37 * hash) + CONTENTENCODE_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Result prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Result)
        ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_Result_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Result.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        description_ = "";

        forId_ = "";

        time_ = 0L;

        serverId_ = "";

        contentEncode_ = 0;

        content_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_Result_descriptor;
      }

      public Result getDefaultInstanceForType() {
        return Result.getDefaultInstance();
      }

      public Result build() {
        Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Result buildPartial() {
        Result result = new Result(this);
        result.code_ = code_;
        result.description_ = description_;
        result.forId_ = forId_;
        result.time_ = time_;
        result.serverId_ = serverId_;
        result.contentEncode_ = contentEncode_;
        result.content_ = content_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Result) {
          return mergeFrom((Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Result other) {
        if (other == Result.getDefaultInstance()) return this;
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getForId().isEmpty()) {
          forId_ = other.forId_;
          onChanged();
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getServerId().isEmpty()) {
          serverId_ = other.serverId_;
          onChanged();
        }
        if (other.getContentEncode() != 0) {
          setContentEncode(other.getContentEncode());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Result) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ ;
      /**
       * <code>optional int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>optional int32 code = 1;</code>
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private Object description_ = "";
      /**
       * <code>optional string description = 2;</code>
       */
      public String getDescription() {
        Object ref = description_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public Builder setDescription(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private Object forId_ = "";
      /**
       * <pre>
       *对应Message里的id， 为客户端id
       * </pre>
       *
       * <code>optional string forId = 3;</code>
       */
      public String getForId() {
        Object ref = forId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          forId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *对应Message里的id， 为客户端id
       * </pre>
       *
       * <code>optional string forId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getForIdBytes() {
        Object ref = forId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          forId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *对应Message里的id， 为客户端id
       * </pre>
       *
       * <code>optional string forId = 3;</code>
       */
      public Builder setForId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        forId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对应Message里的id， 为客户端id
       * </pre>
       *
       * <code>optional string forId = 3;</code>
       */
      public Builder clearForId() {
        
        forId_ = getDefaultInstance().getForId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *对应Message里的id， 为客户端id
       * </pre>
       *
       * <code>optional string forId = 3;</code>
       */
      public Builder setForIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        forId_ = value;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <pre>
       *返回结果的服务器时间
       * </pre>
       *
       * <code>optional int64 time = 4;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       *返回结果的服务器时间
       * </pre>
       *
       * <code>optional int64 time = 4;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *返回结果的服务器时间
       * </pre>
       *
       * <code>optional int64 time = 4;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private Object serverId_ = "";
      /**
       * <pre>
       *处理这件事所对应的服务器ID， 可能没有。
       * </pre>
       *
       * <code>optional string serverId = 5;</code>
       */
      public String getServerId() {
        Object ref = serverId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *处理这件事所对应的服务器ID， 可能没有。
       * </pre>
       *
       * <code>optional string serverId = 5;</code>
       */
      public com.google.protobuf.ByteString
          getServerIdBytes() {
        Object ref = serverId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *处理这件事所对应的服务器ID， 可能没有。
       * </pre>
       *
       * <code>optional string serverId = 5;</code>
       */
      public Builder setServerId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *处理这件事所对应的服务器ID， 可能没有。
       * </pre>
       *
       * <code>optional string serverId = 5;</code>
       */
      public Builder clearServerId() {
        
        serverId_ = getDefaultInstance().getServerId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *处理这件事所对应的服务器ID， 可能没有。
       * </pre>
       *
       * <code>optional string serverId = 5;</code>
       */
      public Builder setServerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverId_ = value;
        onChanged();
        return this;
      }

      private int contentEncode_ ;
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public int getContentEncode() {
        return contentEncode_;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public Builder setContentEncode(int value) {
        
        contentEncode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public Builder clearContentEncode() {
        
        contentEncode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Result)
    }

    // @@protoc_insertion_point(class_scope:Result)
    private static final Result DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Result();
    }

    public static Result getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Result>
        PARSER = new com.google.protobuf.AbstractParser<Result>() {
      public Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Result(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Result> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Result> getParserForType() {
      return PARSER;
    }

    public Result getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutgoingMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OutgoingMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *发送方的用户Id
     * </pre>
     *
     * <code>optional string userId = 2;</code>
     */
    String getUserId();
    /**
     * <pre>
     *发送方的用户Id
     * </pre>
     *
     * <code>optional string userId = 2;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     *该消息来源于那个service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    String getService();
    /**
     * <pre>
     *该消息来源于那个service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     *该消息的发送时间
     * </pre>
     *
     * <code>optional int64 time = 4;</code>
     */
    long getTime();

    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    String getContentType();
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();

    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 6;</code>
     */
    int getContentEncode();

    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 7;</code>
     */
    com.google.protobuf.ByteString getContent();

    /**
     * <pre>
     *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。
     * </pre>
     *
     * <code>optional bool needAck = 8;</code>
     */
    boolean getNeedAck();
  }
  /**
   * <pre>
   *收到消息之后需要发送Acknowledge， 标记已读。
   * </pre>
   *
   * Protobuf type {@code OutgoingMessage}
   */
  public  static final class OutgoingMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OutgoingMessage)
      OutgoingMessageOrBuilder {
    // Use OutgoingMessage.newBuilder() to construct.
    private OutgoingMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutgoingMessage() {
      id_ = "";
      userId_ = "";
      service_ = "";
      time_ = 0L;
      contentType_ = "";
      contentEncode_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
      needAck_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private OutgoingMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 32: {

              time_ = input.readInt64();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              contentType_ = s;
              break;
            }
            case 48: {

              contentEncode_ = input.readInt32();
              break;
            }
            case 58: {

              content_ = input.readBytes();
              break;
            }
            case 64: {

              needAck_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_OutgoingMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_OutgoingMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OutgoingMessage.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USERID_FIELD_NUMBER = 2;
    private volatile Object userId_;
    /**
     * <pre>
     *发送方的用户Id
     * </pre>
     *
     * <code>optional string userId = 2;</code>
     */
    public String getUserId() {
      Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *发送方的用户Id
     * </pre>
     *
     * <code>optional string userId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICE_FIELD_NUMBER = 3;
    private volatile Object service_;
    /**
     * <pre>
     *该消息来源于那个service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    public String getService() {
      Object ref = service_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *该消息来源于那个service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 4;
    private long time_;
    /**
     * <pre>
     *该消息的发送时间
     * </pre>
     *
     * <code>optional int64 time = 4;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int CONTENTTYPE_FIELD_NUMBER = 5;
    private volatile Object contentType_;
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    public String getContentType() {
      Object ref = contentType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        contentType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 5;</code>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      Object ref = contentType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTENCODE_FIELD_NUMBER = 6;
    private int contentEncode_;
    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 6;</code>
     */
    public int getContentEncode() {
      return contentEncode_;
    }

    public static final int CONTENT_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 7;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    public static final int NEEDACK_FIELD_NUMBER = 8;
    private boolean needAck_;
    /**
     * <pre>
     *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。
     * </pre>
     *
     * <code>optional bool needAck = 8;</code>
     */
    public boolean getNeedAck() {
      return needAck_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_);
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, service_);
      }
      if (time_ != 0L) {
        output.writeInt64(4, time_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, contentType_);
      }
      if (contentEncode_ != 0) {
        output.writeInt32(6, contentEncode_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(7, content_);
      }
      if (needAck_ != false) {
        output.writeBool(8, needAck_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userId_);
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, service_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, time_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, contentType_);
      }
      if (contentEncode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, contentEncode_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, content_);
      }
      if (needAck_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, needAck_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OutgoingMessage)) {
        return super.equals(obj);
      }
      OutgoingMessage other = (OutgoingMessage) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getUserId()
          .equals(other.getUserId());
      result = result && getService()
          .equals(other.getService());
      result = result && (getTime()
          == other.getTime());
      result = result && getContentType()
          .equals(other.getContentType());
      result = result && (getContentEncode()
          == other.getContentEncode());
      result = result && getContent()
          .equals(other.getContent());
      result = result && (getNeedAck()
          == other.getNeedAck());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + CONTENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType().hashCode();
      hash = (37 * hash) + CONTENTENCODE_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + NEEDACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNeedAck());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OutgoingMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OutgoingMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OutgoingMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OutgoingMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OutgoingMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OutgoingMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OutgoingMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OutgoingMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OutgoingMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OutgoingMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OutgoingMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *收到消息之后需要发送Acknowledge， 标记已读。
     * </pre>
     *
     * Protobuf type {@code OutgoingMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OutgoingMessage)
        OutgoingMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_OutgoingMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_OutgoingMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OutgoingMessage.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.OutgoingMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        userId_ = "";

        service_ = "";

        time_ = 0L;

        contentType_ = "";

        contentEncode_ = 0;

        content_ = com.google.protobuf.ByteString.EMPTY;

        needAck_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_OutgoingMessage_descriptor;
      }

      public OutgoingMessage getDefaultInstanceForType() {
        return OutgoingMessage.getDefaultInstance();
      }

      public OutgoingMessage build() {
        OutgoingMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OutgoingMessage buildPartial() {
        OutgoingMessage result = new OutgoingMessage(this);
        result.id_ = id_;
        result.userId_ = userId_;
        result.service_ = service_;
        result.time_ = time_;
        result.contentType_ = contentType_;
        result.contentEncode_ = contentEncode_;
        result.content_ = content_;
        result.needAck_ = needAck_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OutgoingMessage) {
          return mergeFrom((OutgoingMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OutgoingMessage other) {
        if (other == OutgoingMessage.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getContentType().isEmpty()) {
          contentType_ = other.contentType_;
          onChanged();
        }
        if (other.getContentEncode() != 0) {
          setContentEncode(other.getContentEncode());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        if (other.getNeedAck() != false) {
          setNeedAck(other.getNeedAck());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OutgoingMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OutgoingMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private Object userId_ = "";
      /**
       * <pre>
       *发送方的用户Id
       * </pre>
       *
       * <code>optional string userId = 2;</code>
       */
      public String getUserId() {
        Object ref = userId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *发送方的用户Id
       * </pre>
       *
       * <code>optional string userId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *发送方的用户Id
       * </pre>
       *
       * <code>optional string userId = 2;</code>
       */
      public Builder setUserId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发送方的用户Id
       * </pre>
       *
       * <code>optional string userId = 2;</code>
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发送方的用户Id
       * </pre>
       *
       * <code>optional string userId = 2;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private Object service_ = "";
      /**
       * <pre>
       *该消息来源于那个service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public String getService() {
        Object ref = service_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *该消息来源于那个service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *该消息来源于那个service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder setService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该消息来源于那个service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该消息来源于那个service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <pre>
       *该消息的发送时间
       * </pre>
       *
       * <code>optional int64 time = 4;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       *该消息的发送时间
       * </pre>
       *
       * <code>optional int64 time = 4;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该消息的发送时间
       * </pre>
       *
       * <code>optional int64 time = 4;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private Object contentType_ = "";
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public String getContentType() {
        Object ref = contentType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public Builder setContentType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public Builder clearContentType() {
        
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 5;</code>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        contentType_ = value;
        onChanged();
        return this;
      }

      private int contentEncode_ ;
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public int getContentEncode() {
        return contentEncode_;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public Builder setContentEncode(int value) {
        
        contentEncode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 6;</code>
       */
      public Builder clearContentEncode() {
        
        contentEncode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 7;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      private boolean needAck_ ;
      /**
       * <pre>
       *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。
       * </pre>
       *
       * <code>optional bool needAck = 8;</code>
       */
      public boolean getNeedAck() {
        return needAck_;
      }
      /**
       * <pre>
       *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。
       * </pre>
       *
       * <code>optional bool needAck = 8;</code>
       */
      public Builder setNeedAck(boolean value) {
        
        needAck_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。
       * </pre>
       *
       * <code>optional bool needAck = 8;</code>
       */
      public Builder clearNeedAck() {
        
        needAck_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:OutgoingMessage)
    }

    // @@protoc_insertion_point(class_scope:OutgoingMessage)
    private static final OutgoingMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OutgoingMessage();
    }

    public static OutgoingMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutgoingMessage>
        PARSER = new com.google.protobuf.AbstractParser<OutgoingMessage>() {
      public OutgoingMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OutgoingMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutgoingMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<OutgoingMessage> getParserForType() {
      return PARSER;
    }

    public OutgoingMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IncomingDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IncomingData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 2;</code>
     */
    String getService();
    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 2;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 3;</code>
     */
    String getContentType();
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 3;</code>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();

    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 4;</code>
     */
    int getContentEncode();

    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 5;</code>
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code IncomingData}
   */
  public  static final class IncomingData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IncomingData)
      IncomingDataOrBuilder {
    // Use IncomingData.newBuilder() to construct.
    private IncomingData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IncomingData() {
      id_ = "";
      service_ = "";
      contentType_ = "";
      contentEncode_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private IncomingData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              contentType_ = s;
              break;
            }
            case 32: {

              contentEncode_ = input.readInt32();
              break;
            }
            case 42: {

              content_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_IncomingData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_IncomingData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IncomingData.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICE_FIELD_NUMBER = 2;
    private volatile Object service_;
    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 2;</code>
     */
    public String getService() {
      Object ref = service_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 2;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTTYPE_FIELD_NUMBER = 3;
    private volatile Object contentType_;
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 3;</code>
     */
    public String getContentType() {
      Object ref = contentType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        contentType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 3;</code>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      Object ref = contentType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTENCODE_FIELD_NUMBER = 4;
    private int contentEncode_;
    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 4;</code>
     */
    public int getContentEncode() {
      return contentEncode_;
    }

    public static final int CONTENT_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 5;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, service_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, contentType_);
      }
      if (contentEncode_ != 0) {
        output.writeInt32(4, contentEncode_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(5, content_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, service_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, contentType_);
      }
      if (contentEncode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, contentEncode_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, content_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof IncomingData)) {
        return super.equals(obj);
      }
      IncomingData other = (IncomingData) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getService()
          .equals(other.getService());
      result = result && getContentType()
          .equals(other.getContentType());
      result = result && (getContentEncode()
          == other.getContentEncode());
      result = result && getContent()
          .equals(other.getContent());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + CONTENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType().hashCode();
      hash = (37 * hash) + CONTENTENCODE_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static IncomingData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IncomingData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IncomingData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IncomingData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IncomingData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IncomingData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static IncomingData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static IncomingData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static IncomingData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IncomingData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(IncomingData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code IncomingData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IncomingData)
        IncomingDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_IncomingData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_IncomingData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IncomingData.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.IncomingData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        service_ = "";

        contentType_ = "";

        contentEncode_ = 0;

        content_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_IncomingData_descriptor;
      }

      public IncomingData getDefaultInstanceForType() {
        return IncomingData.getDefaultInstance();
      }

      public IncomingData build() {
        IncomingData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IncomingData buildPartial() {
        IncomingData result = new IncomingData(this);
        result.id_ = id_;
        result.service_ = service_;
        result.contentType_ = contentType_;
        result.contentEncode_ = contentEncode_;
        result.content_ = content_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IncomingData) {
          return mergeFrom((IncomingData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IncomingData other) {
        if (other == IncomingData.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (!other.getContentType().isEmpty()) {
          contentType_ = other.contentType_;
          onChanged();
        }
        if (other.getContentEncode() != 0) {
          setContentEncode(other.getContentEncode());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IncomingData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IncomingData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private Object service_ = "";
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 2;</code>
       */
      public String getService() {
        Object ref = service_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 2;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 2;</code>
       */
      public Builder setService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 2;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 2;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private Object contentType_ = "";
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 3;</code>
       */
      public String getContentType() {
        Object ref = contentType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 3;</code>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 3;</code>
       */
      public Builder setContentType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 3;</code>
       */
      public Builder clearContentType() {
        
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 3;</code>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        contentType_ = value;
        onChanged();
        return this;
      }

      private int contentEncode_ ;
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 4;</code>
       */
      public int getContentEncode() {
        return contentEncode_;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 4;</code>
       */
      public Builder setContentEncode(int value) {
        
        contentEncode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 4;</code>
       */
      public Builder clearContentEncode() {
        
        contentEncode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 5;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 5;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 5;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:IncomingData)
    }

    // @@protoc_insertion_point(class_scope:IncomingData)
    private static final IncomingData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IncomingData();
    }

    public static IncomingData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IncomingData>
        PARSER = new com.google.protobuf.AbstractParser<IncomingData>() {
      public IncomingData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new IncomingData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IncomingData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IncomingData> getParserForType() {
      return PARSER;
    }

    public IncomingData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutgoingDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OutgoingData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *该消息的发送时间
     * </pre>
     *
     * <code>optional int64 time = 2;</code>
     */
    long getTime();

    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    String getService();
    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 4;</code>
     */
    String getContentType();
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 4;</code>
     */
    com.google.protobuf.ByteString
        getContentTypeBytes();

    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 5;</code>
     */
    int getContentEncode();

    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 6;</code>
     */
    com.google.protobuf.ByteString getContent();

    /**
     * <pre>
     *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。(暂时不确定要不要)
     * </pre>
     *
     * <code>optional bool needAck = 7;</code>
     */
    boolean getNeedAck();
  }
  /**
   * Protobuf type {@code OutgoingData}
   */
  public  static final class OutgoingData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OutgoingData)
      OutgoingDataOrBuilder {
    // Use OutgoingData.newBuilder() to construct.
    private OutgoingData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutgoingData() {
      id_ = "";
      time_ = 0L;
      service_ = "";
      contentType_ = "";
      contentEncode_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
      needAck_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private OutgoingData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              time_ = input.readInt64();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              contentType_ = s;
              break;
            }
            case 40: {

              contentEncode_ = input.readInt32();
              break;
            }
            case 50: {

              content_ = input.readBytes();
              break;
            }
            case 56: {

              needAck_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_OutgoingData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_OutgoingData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OutgoingData.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <pre>
     *该消息的发送时间
     * </pre>
     *
     * <code>optional int64 time = 2;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int SERVICE_FIELD_NUMBER = 3;
    private volatile Object service_;
    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    public String getService() {
      Object ref = service_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务数据的service
     * </pre>
     *
     * <code>optional string service = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTTYPE_FIELD_NUMBER = 4;
    private volatile Object contentType_;
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 4;</code>
     */
    public String getContentType() {
      Object ref = contentType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        contentType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务数据的类型
     * </pre>
     *
     * <code>optional string contentType = 4;</code>
     */
    public com.google.protobuf.ByteString
        getContentTypeBytes() {
      Object ref = contentType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        contentType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENTENCODE_FIELD_NUMBER = 5;
    private int contentEncode_;
    /**
     * <pre>
     *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
     * </pre>
     *
     * <code>optional int32 contentEncode = 5;</code>
     */
    public int getContentEncode() {
      return contentEncode_;
    }

    public static final int CONTENT_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 6;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    public static final int NEEDACK_FIELD_NUMBER = 7;
    private boolean needAck_;
    /**
     * <pre>
     *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。(暂时不确定要不要)
     * </pre>
     *
     * <code>optional bool needAck = 7;</code>
     */
    public boolean getNeedAck() {
      return needAck_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (time_ != 0L) {
        output.writeInt64(2, time_);
      }
      if (!getServiceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, service_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, contentType_);
      }
      if (contentEncode_ != 0) {
        output.writeInt32(5, contentEncode_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(6, content_);
      }
      if (needAck_ != false) {
        output.writeBool(7, needAck_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, time_);
      }
      if (!getServiceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, service_);
      }
      if (!getContentTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, contentType_);
      }
      if (contentEncode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, contentEncode_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, content_);
      }
      if (needAck_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, needAck_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OutgoingData)) {
        return super.equals(obj);
      }
      OutgoingData other = (OutgoingData) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getTime()
          == other.getTime());
      result = result && getService()
          .equals(other.getService());
      result = result && getContentType()
          .equals(other.getContentType());
      result = result && (getContentEncode()
          == other.getContentEncode());
      result = result && getContent()
          .equals(other.getContent());
      result = result && (getNeedAck()
          == other.getNeedAck());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + CONTENTTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getContentType().hashCode();
      hash = (37 * hash) + CONTENTENCODE_FIELD_NUMBER;
      hash = (53 * hash) + getContentEncode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + NEEDACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNeedAck());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OutgoingData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OutgoingData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OutgoingData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OutgoingData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OutgoingData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OutgoingData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OutgoingData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OutgoingData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OutgoingData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OutgoingData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OutgoingData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OutgoingData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OutgoingData)
        OutgoingDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_OutgoingData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_OutgoingData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OutgoingData.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.OutgoingData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        time_ = 0L;

        service_ = "";

        contentType_ = "";

        contentEncode_ = 0;

        content_ = com.google.protobuf.ByteString.EMPTY;

        needAck_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_OutgoingData_descriptor;
      }

      public OutgoingData getDefaultInstanceForType() {
        return OutgoingData.getDefaultInstance();
      }

      public OutgoingData build() {
        OutgoingData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OutgoingData buildPartial() {
        OutgoingData result = new OutgoingData(this);
        result.id_ = id_;
        result.time_ = time_;
        result.service_ = service_;
        result.contentType_ = contentType_;
        result.contentEncode_ = contentEncode_;
        result.content_ = content_;
        result.needAck_ = needAck_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OutgoingData) {
          return mergeFrom((OutgoingData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OutgoingData other) {
        if (other == OutgoingData.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (!other.getContentType().isEmpty()) {
          contentType_ = other.contentType_;
          onChanged();
        }
        if (other.getContentEncode() != 0) {
          setContentEncode(other.getContentEncode());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        if (other.getNeedAck() != false) {
          setNeedAck(other.getNeedAck());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OutgoingData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OutgoingData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <pre>
       *该消息的发送时间
       * </pre>
       *
       * <code>optional int64 time = 2;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       *该消息的发送时间
       * </pre>
       *
       * <code>optional int64 time = 2;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *该消息的发送时间
       * </pre>
       *
       * <code>optional int64 time = 2;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private Object service_ = "";
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public String getService() {
        Object ref = service_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder setService(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的service
       * </pre>
       *
       * <code>optional string service = 3;</code>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private Object contentType_ = "";
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 4;</code>
       */
      public String getContentType() {
        Object ref = contentType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          contentType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 4;</code>
       */
      public com.google.protobuf.ByteString
          getContentTypeBytes() {
        Object ref = contentType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          contentType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 4;</code>
       */
      public Builder setContentType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 4;</code>
       */
      public Builder clearContentType() {
        
        contentType_ = getDefaultInstance().getContentType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的类型
       * </pre>
       *
       * <code>optional string contentType = 4;</code>
       */
      public Builder setContentTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        contentType_ = value;
        onChanged();
        return this;
      }

      private int contentEncode_ ;
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 5;</code>
       */
      public int getContentEncode() {
        return contentEncode_;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 5;</code>
       */
      public Builder setContentEncode(int value) {
        
        contentEncode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的编码方式， 如果编码为CHUNKED=100， 则content里是包的总长度
       * </pre>
       *
       * <code>optional int32 contentEncode = 5;</code>
       */
      public Builder clearContentEncode() {
        
        contentEncode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 6;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 6;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 6;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      private boolean needAck_ ;
      /**
       * <pre>
       *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。(暂时不确定要不要)
       * </pre>
       *
       * <code>optional bool needAck = 7;</code>
       */
      public boolean getNeedAck() {
        return needAck_;
      }
      /**
       * <pre>
       *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。(暂时不确定要不要)
       * </pre>
       *
       * <code>optional bool needAck = 7;</code>
       */
      public Builder setNeedAck(boolean value) {
        
        needAck_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *默认为true， 在业务需要的情况下为false， 会导致这条下行消息不做离线存储。(暂时不确定要不要)
       * </pre>
       *
       * <code>optional bool needAck = 7;</code>
       */
      public Builder clearNeedAck() {
        
        needAck_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:OutgoingData)
    }

    // @@protoc_insertion_point(class_scope:OutgoingData)
    private static final OutgoingData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OutgoingData();
    }

    public static OutgoingData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutgoingData>
        PARSER = new com.google.protobuf.AbstractParser<OutgoingData>() {
      public OutgoingData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OutgoingData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutgoingData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<OutgoingData> getParserForType() {
      return PARSER;
    }

    public OutgoingData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Chunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *被拆包数据的ID
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    String getId();
    /**
     * <pre>
     *被拆包数据的ID
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *被拆包数据的类型， 例如OutgoingMessage, IncomingData, etc
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    int getType();

    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 3;</code>
     */
    com.google.protobuf.ByteString getContent();

    /**
     * <pre>
     *拆包的编号
     * </pre>
     *
     * <code>optional int32 chunkNum = 4;</code>
     */
    int getChunkNum();

    /**
     * <pre>
     *拆包数据的偏移位置
     * </pre>
     *
     * <code>optional int32 offset = 5;</code>
     */
    int getOffset();

    /**
     * <pre>
     *整包的总大小
     * </pre>
     *
     * <code>optional int32 totalSize = 6;</code>
     */
    int getTotalSize();
  }
  /**
   * Protobuf type {@code Chunk}
   */
  public  static final class Chunk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Chunk)
      ChunkOrBuilder {
    // Use Chunk.newBuilder() to construct.
    private Chunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Chunk() {
      id_ = "";
      type_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
      chunkNum_ = 0;
      offset_ = 0;
      totalSize_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Chunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              type_ = input.readInt32();
              break;
            }
            case 26: {

              content_ = input.readBytes();
              break;
            }
            case 32: {

              chunkNum_ = input.readInt32();
              break;
            }
            case 40: {

              offset_ = input.readInt32();
              break;
            }
            case 48: {

              totalSize_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MobilePB.internal_static_Chunk_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MobilePB.internal_static_Chunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Chunk.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <pre>
     *被拆包数据的ID
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *被拆包数据的ID
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *被拆包数据的类型， 例如OutgoingMessage, IncomingData, etc
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int CONTENT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *业务数据的二进制
     * </pre>
     *
     * <code>optional bytes content = 3;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    public static final int CHUNKNUM_FIELD_NUMBER = 4;
    private int chunkNum_;
    /**
     * <pre>
     *拆包的编号
     * </pre>
     *
     * <code>optional int32 chunkNum = 4;</code>
     */
    public int getChunkNum() {
      return chunkNum_;
    }

    public static final int OFFSET_FIELD_NUMBER = 5;
    private int offset_;
    /**
     * <pre>
     *拆包数据的偏移位置
     * </pre>
     *
     * <code>optional int32 offset = 5;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int TOTALSIZE_FIELD_NUMBER = 6;
    private int totalSize_;
    /**
     * <pre>
     *整包的总大小
     * </pre>
     *
     * <code>optional int32 totalSize = 6;</code>
     */
    public int getTotalSize() {
      return totalSize_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (!content_.isEmpty()) {
        output.writeBytes(3, content_);
      }
      if (chunkNum_ != 0) {
        output.writeInt32(4, chunkNum_);
      }
      if (offset_ != 0) {
        output.writeInt32(5, offset_);
      }
      if (totalSize_ != 0) {
        output.writeInt32(6, totalSize_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, content_);
      }
      if (chunkNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, chunkNum_);
      }
      if (offset_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, offset_);
      }
      if (totalSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, totalSize_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Chunk)) {
        return super.equals(obj);
      }
      Chunk other = (Chunk) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getType()
          == other.getType());
      result = result && getContent()
          .equals(other.getContent());
      result = result && (getChunkNum()
          == other.getChunkNum());
      result = result && (getOffset()
          == other.getOffset());
      result = result && (getTotalSize()
          == other.getTotalSize());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + CHUNKNUM_FIELD_NUMBER;
      hash = (53 * hash) + getChunkNum();
      hash = (37 * hash) + OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getOffset();
      hash = (37 * hash) + TOTALSIZE_FIELD_NUMBER;
      hash = (53 * hash) + getTotalSize();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Chunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Chunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Chunk)
        ChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MobilePB.internal_static_Chunk_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MobilePB.internal_static_Chunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Chunk.class, Builder.class);
      }

      // Construct using com.pbdata.generated.mobile.MobilePB.Chunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        type_ = 0;

        content_ = com.google.protobuf.ByteString.EMPTY;

        chunkNum_ = 0;

        offset_ = 0;

        totalSize_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MobilePB.internal_static_Chunk_descriptor;
      }

      public Chunk getDefaultInstanceForType() {
        return Chunk.getDefaultInstance();
      }

      public Chunk build() {
        Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Chunk buildPartial() {
        Chunk result = new Chunk(this);
        result.id_ = id_;
        result.type_ = type_;
        result.content_ = content_;
        result.chunkNum_ = chunkNum_;
        result.offset_ = offset_;
        result.totalSize_ = totalSize_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Chunk) {
          return mergeFrom((Chunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Chunk other) {
        if (other == Chunk.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
          setContent(other.getContent());
        }
        if (other.getChunkNum() != 0) {
          setChunkNum(other.getChunkNum());
        }
        if (other.getOffset() != 0) {
          setOffset(other.getOffset());
        }
        if (other.getTotalSize() != 0) {
          setTotalSize(other.getTotalSize());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Chunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Chunk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object id_ = "";
      /**
       * <pre>
       *被拆包数据的ID
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *被拆包数据的ID
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *被拆包数据的ID
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被拆包数据的ID
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被拆包数据的ID
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *被拆包数据的类型， 例如OutgoingMessage, IncomingData, etc
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *被拆包数据的类型， 例如OutgoingMessage, IncomingData, etc
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *被拆包数据的类型， 例如OutgoingMessage, IncomingData, etc
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 3;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 3;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务数据的二进制
       * </pre>
       *
       * <code>optional bytes content = 3;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }

      private int chunkNum_ ;
      /**
       * <pre>
       *拆包的编号
       * </pre>
       *
       * <code>optional int32 chunkNum = 4;</code>
       */
      public int getChunkNum() {
        return chunkNum_;
      }
      /**
       * <pre>
       *拆包的编号
       * </pre>
       *
       * <code>optional int32 chunkNum = 4;</code>
       */
      public Builder setChunkNum(int value) {
        
        chunkNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *拆包的编号
       * </pre>
       *
       * <code>optional int32 chunkNum = 4;</code>
       */
      public Builder clearChunkNum() {
        
        chunkNum_ = 0;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <pre>
       *拆包数据的偏移位置
       * </pre>
       *
       * <code>optional int32 offset = 5;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <pre>
       *拆包数据的偏移位置
       * </pre>
       *
       * <code>optional int32 offset = 5;</code>
       */
      public Builder setOffset(int value) {
        
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *拆包数据的偏移位置
       * </pre>
       *
       * <code>optional int32 offset = 5;</code>
       */
      public Builder clearOffset() {
        
        offset_ = 0;
        onChanged();
        return this;
      }

      private int totalSize_ ;
      /**
       * <pre>
       *整包的总大小
       * </pre>
       *
       * <code>optional int32 totalSize = 6;</code>
       */
      public int getTotalSize() {
        return totalSize_;
      }
      /**
       * <pre>
       *整包的总大小
       * </pre>
       *
       * <code>optional int32 totalSize = 6;</code>
       */
      public Builder setTotalSize(int value) {
        
        totalSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *整包的总大小
       * </pre>
       *
       * <code>optional int32 totalSize = 6;</code>
       */
      public Builder clearTotalSize() {
        
        totalSize_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Chunk)
    }

    // @@protoc_insertion_point(class_scope:Chunk)
    private static final Chunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Chunk();
    }

    public static Chunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Chunk>
        PARSER = new com.google.protobuf.AbstractParser<Chunk>() {
      public Chunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Chunk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Chunk> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Chunk> getParserForType() {
      return PARSER;
    }

    public Chunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Identity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Identity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IncomingMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IncomingMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Acknowledge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Acknowledge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Ping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Ping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Result_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Result_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_OutgoingMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OutgoingMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IncomingData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IncomingData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_OutgoingData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OutgoingData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Chunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Chunk_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014Mobile.proto\"\257\001\n\010Identity\022\n\n\002id\030\001 \001(\t\022" +
      "\021\n\tsessionId\030\002 \001(\t\022\016\n\006userId\030\003 \001(\t\022\017\n\007se" +
      "rvice\030\004 \001(\t\022\013\n\003key\030\005 \001(\t\022\r\n\005appId\030\006 \001(\t\022" +
      "\014\n\004code\030\007 \001(\t\022\020\n\010terminal\030\010 \001(\005\022\023\n\013devic" +
      "eToken\030\t \001(\t\022\022\n\nsdkVersion\030\n \001(\005\"\274\001\n\017Inc" +
      "omingMessage\022\n\n\002id\030\001 \001(\t\022\016\n\006server\030\002 \001(\t" +
      "\022\017\n\007userIds\030\003 \003(\t\022\017\n\007service\030\004 \001(\t\022\023\n\013co" +
      "ntentType\030\005 \001(\t\022\025\n\rcontentEncode\030\006 \001(\005\022\017" +
      "\n\007content\030\007 \001(\014\022\023\n\013userService\030\010 \001(\t\022\031\n\021" +
      "notSaveOfflineMsg\030\t \001(\010\":\n\013Acknowledge\022\n",
      "\n\002id\030\001 \001(\t\022\016\n\006msgIds\030\002 \003(\t\022\017\n\007service\030\003 " +
      "\001(\t\"\022\n\004Ping\022\n\n\002id\030\001 \001(\t\"\202\001\n\006Result\022\014\n\004co" +
      "de\030\001 \001(\005\022\023\n\013description\030\002 \001(\t\022\r\n\005forId\030\003" +
      " \001(\t\022\014\n\004time\030\004 \001(\003\022\020\n\010serverId\030\005 \001(\t\022\025\n\r" +
      "contentEncode\030\006 \001(\005\022\017\n\007content\030\007 \001(\014\"\232\001\n" +
      "\017OutgoingMessage\022\n\n\002id\030\001 \001(\t\022\016\n\006userId\030\002" +
      " \001(\t\022\017\n\007service\030\003 \001(\t\022\014\n\004time\030\004 \001(\003\022\023\n\013c" +
      "ontentType\030\005 \001(\t\022\025\n\rcontentEncode\030\006 \001(\005\022" +
      "\017\n\007content\030\007 \001(\014\022\017\n\007needAck\030\010 \001(\010\"h\n\014Inc" +
      "omingData\022\n\n\002id\030\001 \001(\t\022\017\n\007service\030\002 \001(\t\022\023",
      "\n\013contentType\030\003 \001(\t\022\025\n\rcontentEncode\030\004 \001" +
      "(\005\022\017\n\007content\030\005 \001(\014\"\207\001\n\014OutgoingData\022\n\n\002" +
      "id\030\001 \001(\t\022\014\n\004time\030\002 \001(\003\022\017\n\007service\030\003 \001(\t\022" +
      "\023\n\013contentType\030\004 \001(\t\022\025\n\rcontentEncode\030\005 " +
      "\001(\005\022\017\n\007content\030\006 \001(\014\022\017\n\007needAck\030\007 \001(\010\"g\n" +
      "\005Chunk\022\n\n\002id\030\001 \001(\t\022\014\n\004type\030\002 \001(\005\022\017\n\007cont" +
      "ent\030\003 \001(\014\022\020\n\010chunkNum\030\004 \001(\005\022\016\n\006offset\030\005 " +
      "\001(\005\022\021\n\ttotalSize\030\006 \001(\005B\'\n\033com.pbdata.gen" +
      "erated.mobileB\010MobilePBb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Identity_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Identity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Identity_descriptor,
        new String[] { "Id", "SessionId", "UserId", "Service", "Key", "AppId", "Code", "Terminal", "DeviceToken", "SdkVersion", });
    internal_static_IncomingMessage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_IncomingMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IncomingMessage_descriptor,
        new String[] { "Id", "Server", "UserIds", "Service", "ContentType", "ContentEncode", "Content", "UserService", "NotSaveOfflineMsg", });
    internal_static_Acknowledge_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Acknowledge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Acknowledge_descriptor,
        new String[] { "Id", "MsgIds", "Service", });
    internal_static_Ping_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Ping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Ping_descriptor,
        new String[] { "Id", });
    internal_static_Result_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Result_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Result_descriptor,
        new String[] { "Code", "Description", "ForId", "Time", "ServerId", "ContentEncode", "Content", });
    internal_static_OutgoingMessage_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_OutgoingMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OutgoingMessage_descriptor,
        new String[] { "Id", "UserId", "Service", "Time", "ContentType", "ContentEncode", "Content", "NeedAck", });
    internal_static_IncomingData_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_IncomingData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IncomingData_descriptor,
        new String[] { "Id", "Service", "ContentType", "ContentEncode", "Content", });
    internal_static_OutgoingData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_OutgoingData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OutgoingData_descriptor,
        new String[] { "Id", "Time", "Service", "ContentType", "ContentEncode", "Content", "NeedAck", });
    internal_static_Chunk_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Chunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Chunk_descriptor,
        new String[] { "Id", "Type", "Content", "ChunkNum", "Offset", "TotalSize", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
