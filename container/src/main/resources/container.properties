server.eth.prefix
server.ip.prefix=192.168.80.248
server.max.users=10000

server.type=docker_tc
docker.name=docker
rpc.port=2212
rpc.sslport=2215
rpc.ssl.clientTrust.jks.path=file:C:\\Users\\lulia\\work\\work_new\\GroovyCloud\\container\\src\\main\\resources\\certificate\\clientTrust.jks
rpc.ssl.server.jks.path=file:C:\\Users\\lulia\\work\\work_new\\GroovyCloud\\container\\src\\main\\resources\\certificate\\server.jks
rpc.ssl.jks.pwd=liyazhou
upstream-port=2222
upstream-ws-port=2225
upstream-ssl-port=2229

groovy.path=./Gateway/groovy/
script.local.path=../local
script.remote.path=/scripts/
internal.key=FSDdfFDWfR324fs98DSF*@#
public.domain=dtc.acucom.net

keystore.pwd=123456
keystore.path=file:C:\\Users\\lulia\\work\\work_new\\GroovyCloud\\container\\src\\main\\resources\\certificate\\keystore_ssl.pkcs12
keymanager.pwd=123456

truststore.pwd=123456
#truststore.path=file:./conf/certificate/truststore.jks
truststore.path=file:C:\\Users\\lulia\\work\\work_new\\GroovyCloud\\container\\src\\main\\resources\\certificate\\truststore.jks

#database.host=mongodb://172.16.2.184:7900
database.host=mongodb://192.168.80.101:27017,192.168.80.101:27018,192.168.80.101:27019

authorization.dbname: authorization

#mongo's db name
offlinemessage.dbname: offlinemessage

#mongo's db name
serverstatus.dbname: serverstatus

#mongo's db name
userinfo.dbname: userinfo

#mongo's db name
logs.dbname: logqueue

#mongo's db name
dockerstatus.dbname: dockerdb

config.dbname: config

connectionsPerHost: 100
mongo.username=
mongo.password=

#gridfs.host=mongodb://172.16.2.184:7900
gridfs.host=mongodb://192.168.80.101:27017,192.168.80.101:27018,192.168.80.101:27019

#mongo's host
gridfs.dbhost:${gridfs.host}

gridfs.files.dbname: gridfiles

gridfs.connectionsPerHost: 2
gridfs.username=
gridfs.password=
gridfs.bucket=imfs

lan.id=frankfurt
lans=frankfurt
host.beijing=http://192.168.122.229:10051
host.frankfurt=http://localhost:80

runtimeBootClass=com.docker.booters.MyGroovyBooter
#是否允许热更
hotDeployment=true
#加载时，当某个包发生错误是否强制退出进程(开发环境不退出，线上退出)
killProcess=false

#tomcat threadpool config
thread.coreSize=20
thread.maximumPoolSize=100
//��λ��
thread.keepAliveTime=60
thread.queueCapacity=20000

service.com.dobybros.chat.storage.adapters.OfflineMessageAdapter=imuserinfo
service.com.dobybros.chat.storage.adapters.ServerStatusAdapter=imuserinfo
service.com.dobybros.chat.storage.adapters.UserInfoAdapter=imuserinfo
service.com.dobybros.chat.storage.adapters.UserInPresenceAdapter=imuserinpresence
service.com.dobybros.chat.storage.adapters.ApnPushAdapter=imapn
service.com.dobybros.chat.storage.adapters.MessageService=imagency
globallan=frankfurt
lan.com.dobybros.chat.storage.adapters.UserInPresenceAdapter=frankfurt